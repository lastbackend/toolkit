/*
Copyright [2014] - [2023] The Last.Backend authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package templates

// Dockerfile is the Dockerfile template used for new services.
var Dockerfile = `# Script generated by toolkit CLI.
FROM golang:alpine as builder

# Set necessary environmet variables needed for our image
ENV CGO_ENABLED=0 GOOS=linux GOARCH=amd64

# Configure golang
ENV GOPATH /go
ENV GOROOT /usr/local/go
ENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH

# Install dependencies
RUN apk --update add --no-cache ca-certificates \
  linux-headers \
  gcc \
  libtool \
  musl-dev

RUN set -ex \
	&& apk add --no-cache --virtual .build-deps \
    bash \
    git \
    curl \
    protoc \
    make \
	\
	&& rm -rf /*.patch

WORKDIR $GOPATH/src/{{.Service}}

# Build Go binary
COPY scripts ./scripts
COPY Makefile go.mod go.sum ./

RUN make init && go mod download

COPY . .

RUN make tidy build


# Deployment container
FROM golang:alpine

COPY --from=builder /go/src/{{.Service}}/{{.Service}} /{{.Service}}

ENTRYPOINT ["/{{.Service}}"]
`

// DockerIgnore is the .dockerignore template used for new services.
var DockerIgnore = `.gitignore
Dockerfile
`
